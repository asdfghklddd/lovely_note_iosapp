iOS 18.5 / iPhone 16 Pro 版本环境注意点（笺间·iMessage 配件版）

一、环境概览
- 测试/模拟配置：iOS 18.5（Simulator）、iPhone 16 Pro。
- 核心目标：保障在该环境下的性能、稳定性、扩展行为与本地通知的一致性。

二、系统与设备特性（与开发相关）
- 高刷新率显示（ProMotion）：动画与滚动应流畅（目标 120fps）；避免主线程阻塞与布局抖动。
- iOS 18.5 性能与续航优化：应用启动、触控响应更快；仍需避免不必要的重绘与过度动画。
- 安全更新：18.5 修复多项漏洞（含 WebKit 严重级别）。编译使用 18.5 SDK，避免私有 API 与反模式。
- 新 API：18.5 提供若干更新（AR 等）。本项目不依赖，避免无谓耦合，确保最低实现面。
- 系统 UI 变更（知悉）：邮件“显示联系人照片”开关、设置内 AppleCare 入口改版（与本项目无直接交互）。

三、架构要点（本项目特有）
- 主应用（SwiftUI） + iMessage 扩展（MSMessagesAppViewController） + App Groups 共享。
- 不自建后端；iMessage 仅作为传输层；“保存到 App”后由主应用安排本地通知。

四、iMessage 扩展注意事项（iOS 18.5）
- 生命周期：扩展不驻留后台，无后台执行；禁止静默发送，发送需用户显式操作。
- UI 呈现：需适配 Compact/Expanded 两种展示（Auto Layout 安全区）；避免复杂层级与高内存图片。
- 性能限制：扩展内存与执行时间受限，尽量使用轻量视图与按需加载资源。
- 载荷体积：`MSMessage.url` 仅容纳小型 JSON（几 KB）。限制字数；必要时轻压缩+Base64（MVP 可不做）。
- 合规：严格使用 Messages 框架公开 API；禁止私有 API、自动注入或静默交互。

五、App Groups 与数据共享
- 配置：主应用与扩展启用相同 App Group（Developer 后台与 Xcode Targets 同步配置）。
- 小数据：`UserDefaults(suiteName:)` 存偏好（如 `homeFlag`）。
- 大数据：`FileManager.containerURL(forSecurityApplicationGroupIdentifier:)` 下存 `/Letters/<id>.json`。
- 稳定性：读写需做容错与原子写入（先写临时文件再替换），避免扩展/主应用并发写导致数据损坏。

六、本地通知（UNUserNotificationCenter）
- 扩展不可直接后台安排；需“保存到 App”后由主应用调度。
- 权限引导：在主应用首次启动或相关流程处请求；提供关闭后的再启引导。
- 到点触达：以 `unlockAt` 安排本地提醒；App 前台时注意 Foreground 展示策略（自定义提示）。

七、性能与电量优化
- 动画帧率：列表滚动、开封动画等遵循 120Hz 设备最佳实践；使用 Core Animation/SwiftUI 动画，避免频繁布局与复杂阴影。
- 图片资源：纸张纹理与蜡封图控制分辨率（1x/2x/3x），按需加载，避免在扩展中解大图。
- 文本渲染：使用系统字体栈 + 1–2 款手写风格（避免多字体切换导致的布局抖动）。

八、适配与无障碍
- 安全区与动态岛：列表与详情适配顶部/底部安全区；避免被系统手势遮挡。
- 动态字体：开启 Content Size Category；正文不小于 15pt；按钮命中区域≥44pt。
- 对比度：关键文本对比≥4.5:1；暗色模式可延后，首版先确保浅色可读性。
- VoiceOver：对气泡与状态做可读描述（示例：“信件，在途，预计 X 天后可开封”）。

九、构建与签名（不改工程配置，仅提示）
- 使用对应 18.5 SDK 的 Xcode 版本；两个 Targets 勾选同一 App Group 标识。
- 注册自定义 URL Scheme（如 `jian://save?id=<id>`）用于“保存到 App”回跳。
- 开启必要的 Entitlements：App Groups、（可选）Haptics/Background Modes（不启不需要的）。

十、测试清单（iOS 18.5 / iPhone 16 Pro）
- 扩展流程：插入气泡→接收端点击→未到点倒计时→“保存到 App”→主应用归档→到点通知→到家开封。
- 权限边界：拒绝/允许通知；到家开关 Off/On；无网络/弱网；重复点击与快速切换。
- 体积边界：长文（控制在数百字）；多封并发在途；图片资源内存占用。
- 时钟边界：修改系统时间（仅文案提醒）；跨日/跨周（墨水配额重置）。

十一、与系统 18.5 相关的已知点
- 性能/续航提升、WebKit 漏洞修复、新 API（AR 等）可带来更稳的运行环境；与本项目核心逻辑无直接冲突。
- 建议在 18.5 环境做完整兼容性回归，防止第三方库/系统行为变更导致的边界问题。

十二、结论
- 在 iOS 18.5 + iPhone 16 Pro 上，该架构（主应用 + iMessage 扩展 + App Groups）实现成本低、风险可控。
- 关键把握：扩展无后台、消息载荷小、通知由主应用调度、严格遵循公开 API 与合规边界。
